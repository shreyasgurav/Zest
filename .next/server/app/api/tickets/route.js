"use strict";(()=>{var e={};e.id=4594,e.ids=[4594],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2329:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>E,originalPathname:()=>m,patchFetch:()=>v,requestAsyncStorage:()=>d,routeModule:()=>u,serverHooks:()=>g,staticGenerationAsyncStorage:()=>p,staticGenerationBailout:()=>h});var s={};r.r(s),r.d(s,{GET:()=>l});var i=r(95419),o=r(69108),n=r(99678),a=r(78070),c=r(87447);async function l(e){try{let{searchParams:t}=new URL(e.url),r=t.get("userId");if(!r)return a.Z.json({error:"User ID is required"},{status:400});console.log("Fetching tickets for user:",r);let s=(await c.i.collection("tickets").where("userId","==",r).get()).docs.map(e=>({id:e.id,...e.data()}));return s.sort((e,t)=>{let r=new Date(e.createdAt||0).getTime();return new Date(t.createdAt||0).getTime()-r}),console.log(`Found ${s.length} tickets for user ${r}`),a.Z.json({success:!0,tickets:s,count:s.length})}catch(e){return console.error("Error fetching tickets:",e),console.error("Error details:",{message:e instanceof Error?e.message:"Unknown error",stack:e instanceof Error?e.stack:"No stack trace"}),a.Z.json({error:"Failed to fetch tickets",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}let u=new i.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/tickets/route",pathname:"/api/tickets",filename:"route",bundlePath:"app/api/tickets/route"},resolvedPagePath:"/Users/shreyasgurav/Documents/Projects/Zest Deployed/src/app/api/tickets/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:d,staticGenerationAsyncStorage:p,serverHooks:g,headerHooks:E,staticGenerationBailout:h}=u,m="/api/tickets/route";function v(){return(0,n.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:p})}},87447:(e,t,r)=>{r.d(t,{i:()=>o});let s=require("firebase-admin");var i=r.n(s);if(!i().apps.length){let e=process.env.FIREBASE_PRIVATE_KEY,t=process.env.FIREBASE_CLIENT_EMAIL,r="zest-62191";if(console.log("Initializing Firebase Admin SDK..."),console.log("Project ID:",r),console.log("Client Email:",t),console.log("Private Key exists:",!!e),e&&t&&r)try{console.log("Using service account credentials"),i().initializeApp({credential:i().credential.cert({projectId:r,clientEmail:t,privateKey:e.replace(/\\n/g,"\n")}),projectId:r,databaseURL:`https://${r}.firebaseio.com`}),console.log("Firebase Admin SDK initialized successfully with service account")}catch(e){throw console.error("Failed to initialize Firebase Admin SDK with service account:",e),e}else throw Error("Firebase Admin SDK requires service account credentials in production. Please set FIREBASE_PRIVATE_KEY and FIREBASE_CLIENT_EMAIL environment variables.")}let o=i().firestore()}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[1638,6206],()=>r(2329));module.exports=s})();