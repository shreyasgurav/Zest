"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/input-format";
exports.ids = ["vendor-chunks/input-format"];
exports.modules = {

/***/ "(ssr)/./node_modules/input-format/modules/closeBraces.js":
/*!**********************************************************!*\
  !*** ./node_modules/input-format/modules/closeBraces.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ closeBraces)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/./node_modules/input-format/modules/helpers.js\");\n\nfunction closeBraces(retained_template, template) {\n    var placeholder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"x\";\n    var empty_placeholder = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \" \";\n    var cut_before = retained_template.length;\n    var opening_braces = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.count_occurences)(\"(\", retained_template);\n    var closing_braces = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.count_occurences)(\")\", retained_template);\n    var dangling_braces = opening_braces - closing_braces;\n    while(dangling_braces > 0 && cut_before < template.length){\n        retained_template += template[cut_before].replace(placeholder, empty_placeholder);\n        if (template[cut_before] === \")\") {\n            dangling_braces--;\n        }\n        cut_before++;\n    }\n    return retained_template;\n} //# sourceMappingURL=closeBraces.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaW5wdXQtZm9ybWF0L21vZHVsZXMvY2xvc2VCcmFjZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0Q7QUFDakMsU0FBU0MsWUFBWUMsaUJBQWlCLEVBQUVDLFFBQVE7SUFDN0QsSUFBSUMsY0FBY0MsVUFBVUMsTUFBTSxHQUFHLEtBQUtELFNBQVMsQ0FBQyxFQUFFLEtBQUtFLFlBQVlGLFNBQVMsQ0FBQyxFQUFFLEdBQUc7SUFDdEYsSUFBSUcsb0JBQW9CSCxVQUFVQyxNQUFNLEdBQUcsS0FBS0QsU0FBUyxDQUFDLEVBQUUsS0FBS0UsWUFBWUYsU0FBUyxDQUFDLEVBQUUsR0FBRztJQUM1RixJQUFJSSxhQUFhUCxrQkFBa0JJLE1BQU07SUFDekMsSUFBSUksaUJBQWlCViw2REFBZ0JBLENBQUMsS0FBS0U7SUFDM0MsSUFBSVMsaUJBQWlCWCw2REFBZ0JBLENBQUMsS0FBS0U7SUFDM0MsSUFBSVUsa0JBQWtCRixpQkFBaUJDO0lBRXZDLE1BQU9DLGtCQUFrQixLQUFLSCxhQUFhTixTQUFTRyxNQUFNLENBQUU7UUFDMURKLHFCQUFxQkMsUUFBUSxDQUFDTSxXQUFXLENBQUNJLE9BQU8sQ0FBQ1QsYUFBYUk7UUFFL0QsSUFBSUwsUUFBUSxDQUFDTSxXQUFXLEtBQUssS0FBSztZQUNoQ0c7UUFDRjtRQUVBSDtJQUNGO0lBRUEsT0FBT1A7QUFDVCxFQUNBLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL3plc3QtdjMvLi9ub2RlX21vZHVsZXMvaW5wdXQtZm9ybWF0L21vZHVsZXMvY2xvc2VCcmFjZXMuanM/Mjc2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb3VudF9vY2N1cmVuY2VzIH0gZnJvbSAnLi9oZWxwZXJzLmpzJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNsb3NlQnJhY2VzKHJldGFpbmVkX3RlbXBsYXRlLCB0ZW1wbGF0ZSkge1xuICB2YXIgcGxhY2Vob2xkZXIgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6ICd4JztcbiAgdmFyIGVtcHR5X3BsYWNlaG9sZGVyID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiAnICc7XG4gIHZhciBjdXRfYmVmb3JlID0gcmV0YWluZWRfdGVtcGxhdGUubGVuZ3RoO1xuICB2YXIgb3BlbmluZ19icmFjZXMgPSBjb3VudF9vY2N1cmVuY2VzKCcoJywgcmV0YWluZWRfdGVtcGxhdGUpO1xuICB2YXIgY2xvc2luZ19icmFjZXMgPSBjb3VudF9vY2N1cmVuY2VzKCcpJywgcmV0YWluZWRfdGVtcGxhdGUpO1xuICB2YXIgZGFuZ2xpbmdfYnJhY2VzID0gb3BlbmluZ19icmFjZXMgLSBjbG9zaW5nX2JyYWNlcztcblxuICB3aGlsZSAoZGFuZ2xpbmdfYnJhY2VzID4gMCAmJiBjdXRfYmVmb3JlIDwgdGVtcGxhdGUubGVuZ3RoKSB7XG4gICAgcmV0YWluZWRfdGVtcGxhdGUgKz0gdGVtcGxhdGVbY3V0X2JlZm9yZV0ucmVwbGFjZShwbGFjZWhvbGRlciwgZW1wdHlfcGxhY2Vob2xkZXIpO1xuXG4gICAgaWYgKHRlbXBsYXRlW2N1dF9iZWZvcmVdID09PSAnKScpIHtcbiAgICAgIGRhbmdsaW5nX2JyYWNlcy0tO1xuICAgIH1cblxuICAgIGN1dF9iZWZvcmUrKztcbiAgfVxuXG4gIHJldHVybiByZXRhaW5lZF90ZW1wbGF0ZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNsb3NlQnJhY2VzLmpzLm1hcCJdLCJuYW1lcyI6WyJjb3VudF9vY2N1cmVuY2VzIiwiY2xvc2VCcmFjZXMiLCJyZXRhaW5lZF90ZW1wbGF0ZSIsInRlbXBsYXRlIiwicGxhY2Vob2xkZXIiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJlbXB0eV9wbGFjZWhvbGRlciIsImN1dF9iZWZvcmUiLCJvcGVuaW5nX2JyYWNlcyIsImNsb3NpbmdfYnJhY2VzIiwiZGFuZ2xpbmdfYnJhY2VzIiwicmVwbGFjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/input-format/modules/closeBraces.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/input-format/modules/dom.js":
/*!**************************************************!*\
  !*** ./node_modules/input-format/modules/dom.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Keys: () => (/* binding */ Keys),\n/* harmony export */   getCaretPosition: () => (/* binding */ getCaretPosition),\n/* harmony export */   getOperation: () => (/* binding */ getOperation),\n/* harmony export */   getSelection: () => (/* binding */ getSelection),\n/* harmony export */   isReadOnly: () => (/* binding */ isReadOnly),\n/* harmony export */   setCaretPosition: () => (/* binding */ setCaretPosition)\n/* harmony export */ });\nfunction isReadOnly(element) {\n    return element.hasAttribute(\"readonly\");\n} // Gets <input/> selection bounds\nfunction getSelection(element) {\n    // If no selection, return nothing\n    if (element.selectionStart === element.selectionEnd) {\n        return;\n    }\n    return {\n        start: element.selectionStart,\n        end: element.selectionEnd\n    };\n} // Key codes\nvar Keys = {\n    Backspace: 8,\n    Delete: 46\n}; // Finds out the operation to be intercepted and performed\n// based on the key down event `keyCode`.\nfunction getOperation(event) {\n    switch(event.keyCode){\n        case Keys.Backspace:\n            return \"Backspace\";\n        case Keys.Delete:\n            return \"Delete\";\n    }\n} // Gets <input/> caret position\nfunction getCaretPosition(element) {\n    return element.selectionStart;\n} // Sets <input/> caret position\nfunction setCaretPosition(element, caret_position) {\n    // Sanity check\n    if (caret_position === undefined) {\n        return;\n    } // Set caret position.\n    // There has been an issue with caret positioning on Android devices.\n    // https://github.com/catamphetamine/input-format/issues/2\n    // I was revisiting this issue and looked for similar issues in other libraries.\n    // For example, there's [`text-mask`](https://github.com/text-mask/text-mask) library.\n    // They've had exactly the same issue when the caret seemingly refused to be repositioned programmatically.\n    // The symptoms were the same: whenever the caret passed through a non-digit character of a mask (a whitespace, a bracket, a dash, etc), it looked as if it placed itself one character before its correct position.\n    // https://github.com/text-mask/text-mask/issues/300\n    // They seem to have found a basic fix for it: calling `input.setSelectionRange()` in a timeout rather than instantly for Android devices.\n    // https://github.com/text-mask/text-mask/pull/400/files\n    // I've implemented the same workaround here.\n    if (isAndroid()) {\n        setTimeout(function() {\n            return element.setSelectionRange(caret_position, caret_position);\n        }, 0);\n    } else {\n        element.setSelectionRange(caret_position, caret_position);\n    }\n}\nfunction isAndroid() {\n    // `navigator` is not defined when running mocha tests.\n    if (typeof navigator !== \"undefined\") {\n        return ANDROID_USER_AGENT_REG_EXP.test(navigator.userAgent);\n    }\n}\nvar ANDROID_USER_AGENT_REG_EXP = /Android/i; //# sourceMappingURL=dom.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaW5wdXQtZm9ybWF0L21vZHVsZXMvZG9tLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFPLFNBQVNBLFdBQVdDLE9BQU87SUFDaEMsT0FBT0EsUUFBUUMsWUFBWSxDQUFDO0FBQzlCLEVBQUUsaUNBQWlDO0FBRTVCLFNBQVNDLGFBQWFGLE9BQU87SUFDbEMsa0NBQWtDO0lBQ2xDLElBQUlBLFFBQVFHLGNBQWMsS0FBS0gsUUFBUUksWUFBWSxFQUFFO1FBQ25EO0lBQ0Y7SUFFQSxPQUFPO1FBQ0xDLE9BQU9MLFFBQVFHLGNBQWM7UUFDN0JHLEtBQUtOLFFBQVFJLFlBQVk7SUFDM0I7QUFDRixFQUFFLFlBQVk7QUFFUCxJQUFJRyxPQUFPO0lBQ2hCQyxXQUFXO0lBQ1hDLFFBQVE7QUFDVixFQUFFLENBQUMsMERBQTBEO0FBQzdELHlDQUF5QztBQUVsQyxTQUFTQyxhQUFhQyxLQUFLO0lBQ2hDLE9BQVFBLE1BQU1DLE9BQU87UUFDbkIsS0FBS0wsS0FBS0MsU0FBUztZQUNqQixPQUFPO1FBRVQsS0FBS0QsS0FBS0UsTUFBTTtZQUNkLE9BQU87SUFDWDtBQUNGLEVBQUUsK0JBQStCO0FBRTFCLFNBQVNJLGlCQUFpQmIsT0FBTztJQUN0QyxPQUFPQSxRQUFRRyxjQUFjO0FBQy9CLEVBQUUsK0JBQStCO0FBRTFCLFNBQVNXLGlCQUFpQmQsT0FBTyxFQUFFZSxjQUFjO0lBQ3RELGVBQWU7SUFDZixJQUFJQSxtQkFBbUJDLFdBQVc7UUFDaEM7SUFDRixFQUFFLHNCQUFzQjtJQUN4QixxRUFBcUU7SUFDckUsMERBQTBEO0lBQzFELGdGQUFnRjtJQUNoRixzRkFBc0Y7SUFDdEYsMkdBQTJHO0lBQzNHLG9OQUFvTjtJQUNwTixvREFBb0Q7SUFDcEQsMElBQTBJO0lBQzFJLHdEQUF3RDtJQUN4RCw2Q0FBNkM7SUFHN0MsSUFBSUMsYUFBYTtRQUNmQyxXQUFXO1lBQ1QsT0FBT2xCLFFBQVFtQixpQkFBaUIsQ0FBQ0osZ0JBQWdCQTtRQUNuRCxHQUFHO0lBQ0wsT0FBTztRQUNMZixRQUFRbUIsaUJBQWlCLENBQUNKLGdCQUFnQkE7SUFDNUM7QUFDRjtBQUVBLFNBQVNFO0lBQ1AsdURBQXVEO0lBQ3ZELElBQUksT0FBT0csY0FBYyxhQUFhO1FBQ3BDLE9BQU9DLDJCQUEyQkMsSUFBSSxDQUFDRixVQUFVRyxTQUFTO0lBQzVEO0FBQ0Y7QUFFQSxJQUFJRiw2QkFBNkIsWUFDakMsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vemVzdC12My8uL25vZGVfbW9kdWxlcy9pbnB1dC1mb3JtYXQvbW9kdWxlcy9kb20uanM/MTI2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNSZWFkT25seShlbGVtZW50KSB7XG4gIHJldHVybiBlbGVtZW50Lmhhc0F0dHJpYnV0ZSgncmVhZG9ubHknKTtcbn0gLy8gR2V0cyA8aW5wdXQvPiBzZWxlY3Rpb24gYm91bmRzXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTZWxlY3Rpb24oZWxlbWVudCkge1xuICAvLyBJZiBubyBzZWxlY3Rpb24sIHJldHVybiBub3RoaW5nXG4gIGlmIChlbGVtZW50LnNlbGVjdGlvblN0YXJ0ID09PSBlbGVtZW50LnNlbGVjdGlvbkVuZCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgc3RhcnQ6IGVsZW1lbnQuc2VsZWN0aW9uU3RhcnQsXG4gICAgZW5kOiBlbGVtZW50LnNlbGVjdGlvbkVuZFxuICB9O1xufSAvLyBLZXkgY29kZXNcblxuZXhwb3J0IHZhciBLZXlzID0ge1xuICBCYWNrc3BhY2U6IDgsXG4gIERlbGV0ZTogNDZcbn07IC8vIEZpbmRzIG91dCB0aGUgb3BlcmF0aW9uIHRvIGJlIGludGVyY2VwdGVkIGFuZCBwZXJmb3JtZWRcbi8vIGJhc2VkIG9uIHRoZSBrZXkgZG93biBldmVudCBga2V5Q29kZWAuXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRPcGVyYXRpb24oZXZlbnQpIHtcbiAgc3dpdGNoIChldmVudC5rZXlDb2RlKSB7XG4gICAgY2FzZSBLZXlzLkJhY2tzcGFjZTpcbiAgICAgIHJldHVybiAnQmFja3NwYWNlJztcblxuICAgIGNhc2UgS2V5cy5EZWxldGU6XG4gICAgICByZXR1cm4gJ0RlbGV0ZSc7XG4gIH1cbn0gLy8gR2V0cyA8aW5wdXQvPiBjYXJldCBwb3NpdGlvblxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2FyZXRQb3NpdGlvbihlbGVtZW50KSB7XG4gIHJldHVybiBlbGVtZW50LnNlbGVjdGlvblN0YXJ0O1xufSAvLyBTZXRzIDxpbnB1dC8+IGNhcmV0IHBvc2l0aW9uXG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRDYXJldFBvc2l0aW9uKGVsZW1lbnQsIGNhcmV0X3Bvc2l0aW9uKSB7XG4gIC8vIFNhbml0eSBjaGVja1xuICBpZiAoY2FyZXRfcG9zaXRpb24gPT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybjtcbiAgfSAvLyBTZXQgY2FyZXQgcG9zaXRpb24uXG4gIC8vIFRoZXJlIGhhcyBiZWVuIGFuIGlzc3VlIHdpdGggY2FyZXQgcG9zaXRpb25pbmcgb24gQW5kcm9pZCBkZXZpY2VzLlxuICAvLyBodHRwczovL2dpdGh1Yi5jb20vY2F0YW1waGV0YW1pbmUvaW5wdXQtZm9ybWF0L2lzc3Vlcy8yXG4gIC8vIEkgd2FzIHJldmlzaXRpbmcgdGhpcyBpc3N1ZSBhbmQgbG9va2VkIGZvciBzaW1pbGFyIGlzc3VlcyBpbiBvdGhlciBsaWJyYXJpZXMuXG4gIC8vIEZvciBleGFtcGxlLCB0aGVyZSdzIFtgdGV4dC1tYXNrYF0oaHR0cHM6Ly9naXRodWIuY29tL3RleHQtbWFzay90ZXh0LW1hc2spIGxpYnJhcnkuXG4gIC8vIFRoZXkndmUgaGFkIGV4YWN0bHkgdGhlIHNhbWUgaXNzdWUgd2hlbiB0aGUgY2FyZXQgc2VlbWluZ2x5IHJlZnVzZWQgdG8gYmUgcmVwb3NpdGlvbmVkIHByb2dyYW1tYXRpY2FsbHkuXG4gIC8vIFRoZSBzeW1wdG9tcyB3ZXJlIHRoZSBzYW1lOiB3aGVuZXZlciB0aGUgY2FyZXQgcGFzc2VkIHRocm91Z2ggYSBub24tZGlnaXQgY2hhcmFjdGVyIG9mIGEgbWFzayAoYSB3aGl0ZXNwYWNlLCBhIGJyYWNrZXQsIGEgZGFzaCwgZXRjKSwgaXQgbG9va2VkIGFzIGlmIGl0IHBsYWNlZCBpdHNlbGYgb25lIGNoYXJhY3RlciBiZWZvcmUgaXRzIGNvcnJlY3QgcG9zaXRpb24uXG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS90ZXh0LW1hc2svdGV4dC1tYXNrL2lzc3Vlcy8zMDBcbiAgLy8gVGhleSBzZWVtIHRvIGhhdmUgZm91bmQgYSBiYXNpYyBmaXggZm9yIGl0OiBjYWxsaW5nIGBpbnB1dC5zZXRTZWxlY3Rpb25SYW5nZSgpYCBpbiBhIHRpbWVvdXQgcmF0aGVyIHRoYW4gaW5zdGFudGx5IGZvciBBbmRyb2lkIGRldmljZXMuXG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS90ZXh0LW1hc2svdGV4dC1tYXNrL3B1bGwvNDAwL2ZpbGVzXG4gIC8vIEkndmUgaW1wbGVtZW50ZWQgdGhlIHNhbWUgd29ya2Fyb3VuZCBoZXJlLlxuXG5cbiAgaWYgKGlzQW5kcm9pZCgpKSB7XG4gICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gZWxlbWVudC5zZXRTZWxlY3Rpb25SYW5nZShjYXJldF9wb3NpdGlvbiwgY2FyZXRfcG9zaXRpb24pO1xuICAgIH0sIDApO1xuICB9IGVsc2Uge1xuICAgIGVsZW1lbnQuc2V0U2VsZWN0aW9uUmFuZ2UoY2FyZXRfcG9zaXRpb24sIGNhcmV0X3Bvc2l0aW9uKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpc0FuZHJvaWQoKSB7XG4gIC8vIGBuYXZpZ2F0b3JgIGlzIG5vdCBkZWZpbmVkIHdoZW4gcnVubmluZyBtb2NoYSB0ZXN0cy5cbiAgaWYgKHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIEFORFJPSURfVVNFUl9BR0VOVF9SRUdfRVhQLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gIH1cbn1cblxudmFyIEFORFJPSURfVVNFUl9BR0VOVF9SRUdfRVhQID0gL0FuZHJvaWQvaTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRvbS5qcy5tYXAiXSwibmFtZXMiOlsiaXNSZWFkT25seSIsImVsZW1lbnQiLCJoYXNBdHRyaWJ1dGUiLCJnZXRTZWxlY3Rpb24iLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsInN0YXJ0IiwiZW5kIiwiS2V5cyIsIkJhY2tzcGFjZSIsIkRlbGV0ZSIsImdldE9wZXJhdGlvbiIsImV2ZW50Iiwia2V5Q29kZSIsImdldENhcmV0UG9zaXRpb24iLCJzZXRDYXJldFBvc2l0aW9uIiwiY2FyZXRfcG9zaXRpb24iLCJ1bmRlZmluZWQiLCJpc0FuZHJvaWQiLCJzZXRUaW1lb3V0Iiwic2V0U2VsZWN0aW9uUmFuZ2UiLCJuYXZpZ2F0b3IiLCJBTkRST0lEX1VTRVJfQUdFTlRfUkVHX0VYUCIsInRlc3QiLCJ1c2VyQWdlbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/input-format/modules/dom.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/input-format/modules/edit.js":
/*!***************************************************!*\
  !*** ./node_modules/input-format/modules/edit.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ edit)\n/* harmony export */ });\n// Edits text `value` (if `operation` is passed) and repositions the `caret` if needed.\n//\n// Example:\n//\n// value - '88005553535'\n// caret - 2 // starting from 0; is positioned before the first zero\n// operation - 'Backspace'\n//\n// Returns\n// {\n// \tvalue: '8005553535'\n// \tcaret: 1\n// }\n//\n// Currently supports just 'Delete' and 'Backspace' operations\n//\nfunction edit(value, caret, operation) {\n    switch(operation){\n        case \"Backspace\":\n            // If there exists the previous character,\n            // then erase it and reposition the caret.\n            if (caret > 0) {\n                // Remove the previous character\n                value = value.slice(0, caret - 1) + value.slice(caret); // Position the caret where the previous (erased) character was\n                caret--;\n            }\n            break;\n        case \"Delete\":\n            // Remove current digit (if any)\n            value = value.slice(0, caret) + value.slice(caret + 1);\n            break;\n    }\n    return {\n        value: value,\n        caret: caret\n    };\n} //# sourceMappingURL=edit.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaW5wdXQtZm9ybWF0L21vZHVsZXMvZWRpdC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsdUZBQXVGO0FBQ3ZGLEVBQUU7QUFDRixXQUFXO0FBQ1gsRUFBRTtBQUNGLHdCQUF3QjtBQUN4QixvRUFBb0U7QUFDcEUsMEJBQTBCO0FBQzFCLEVBQUU7QUFDRixVQUFVO0FBQ1YsSUFBSTtBQUNKLHVCQUF1QjtBQUN2QixZQUFZO0FBQ1osSUFBSTtBQUNKLEVBQUU7QUFDRiw4REFBOEQ7QUFDOUQsRUFBRTtBQUNhLFNBQVNBLEtBQUtDLEtBQUssRUFBRUMsS0FBSyxFQUFFQyxTQUFTO0lBQ2xELE9BQVFBO1FBQ04sS0FBSztZQUNILDBDQUEwQztZQUMxQywwQ0FBMEM7WUFDMUMsSUFBSUQsUUFBUSxHQUFHO2dCQUNiLGdDQUFnQztnQkFDaENELFFBQVFBLE1BQU1HLEtBQUssQ0FBQyxHQUFHRixRQUFRLEtBQUtELE1BQU1HLEtBQUssQ0FBQ0YsUUFBUSwrREFBK0Q7Z0JBRXZIQTtZQUNGO1lBRUE7UUFFRixLQUFLO1lBQ0gsZ0NBQWdDO1lBQ2hDRCxRQUFRQSxNQUFNRyxLQUFLLENBQUMsR0FBR0YsU0FBU0QsTUFBTUcsS0FBSyxDQUFDRixRQUFRO1lBQ3BEO0lBQ0o7SUFFQSxPQUFPO1FBQ0xELE9BQU9BO1FBQ1BDLE9BQU9BO0lBQ1Q7QUFDRixFQUNBLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL3plc3QtdjMvLi9ub2RlX21vZHVsZXMvaW5wdXQtZm9ybWF0L21vZHVsZXMvZWRpdC5qcz9jZGYxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEVkaXRzIHRleHQgYHZhbHVlYCAoaWYgYG9wZXJhdGlvbmAgaXMgcGFzc2VkKSBhbmQgcmVwb3NpdGlvbnMgdGhlIGBjYXJldGAgaWYgbmVlZGVkLlxuLy9cbi8vIEV4YW1wbGU6XG4vL1xuLy8gdmFsdWUgLSAnODgwMDU1NTM1MzUnXG4vLyBjYXJldCAtIDIgLy8gc3RhcnRpbmcgZnJvbSAwOyBpcyBwb3NpdGlvbmVkIGJlZm9yZSB0aGUgZmlyc3QgemVyb1xuLy8gb3BlcmF0aW9uIC0gJ0JhY2tzcGFjZSdcbi8vXG4vLyBSZXR1cm5zXG4vLyB7XG4vLyBcdHZhbHVlOiAnODAwNTU1MzUzNSdcbi8vIFx0Y2FyZXQ6IDFcbi8vIH1cbi8vXG4vLyBDdXJyZW50bHkgc3VwcG9ydHMganVzdCAnRGVsZXRlJyBhbmQgJ0JhY2tzcGFjZScgb3BlcmF0aW9uc1xuLy9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGVkaXQodmFsdWUsIGNhcmV0LCBvcGVyYXRpb24pIHtcbiAgc3dpdGNoIChvcGVyYXRpb24pIHtcbiAgICBjYXNlICdCYWNrc3BhY2UnOlxuICAgICAgLy8gSWYgdGhlcmUgZXhpc3RzIHRoZSBwcmV2aW91cyBjaGFyYWN0ZXIsXG4gICAgICAvLyB0aGVuIGVyYXNlIGl0IGFuZCByZXBvc2l0aW9uIHRoZSBjYXJldC5cbiAgICAgIGlmIChjYXJldCA+IDApIHtcbiAgICAgICAgLy8gUmVtb3ZlIHRoZSBwcmV2aW91cyBjaGFyYWN0ZXJcbiAgICAgICAgdmFsdWUgPSB2YWx1ZS5zbGljZSgwLCBjYXJldCAtIDEpICsgdmFsdWUuc2xpY2UoY2FyZXQpOyAvLyBQb3NpdGlvbiB0aGUgY2FyZXQgd2hlcmUgdGhlIHByZXZpb3VzIChlcmFzZWQpIGNoYXJhY3RlciB3YXNcblxuICAgICAgICBjYXJldC0tO1xuICAgICAgfVxuXG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ0RlbGV0ZSc6XG4gICAgICAvLyBSZW1vdmUgY3VycmVudCBkaWdpdCAoaWYgYW55KVxuICAgICAgdmFsdWUgPSB2YWx1ZS5zbGljZSgwLCBjYXJldCkgKyB2YWx1ZS5zbGljZShjYXJldCArIDEpO1xuICAgICAgYnJlYWs7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHZhbHVlOiB2YWx1ZSxcbiAgICBjYXJldDogY2FyZXRcbiAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVkaXQuanMubWFwIl0sIm5hbWVzIjpbImVkaXQiLCJ2YWx1ZSIsImNhcmV0Iiwib3BlcmF0aW9uIiwic2xpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/input-format/modules/edit.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/input-format/modules/format.js":
/*!*****************************************************!*\
  !*** ./node_modules/input-format/modules/format.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ format)\n/* harmony export */ });\n/* harmony import */ var _templateFormatter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./templateFormatter.js */ \"(ssr)/./node_modules/input-format/modules/templateFormatter.js\");\n // Formats `value` value preserving `caret` at the same character.\n//\n// `{ value, caret }` attribute is the result of `parse()` function call.\n//\n// Returns `{ text, caret }` where the new `caret` is the caret position\n// inside `text` text corresponding to the original `caret` position inside `value`.\n//\n// `formatter(value)` is a function returning `{ text, template }`.\n//\n// `text` is the `value` value formatted using `template`.\n// It may either cut off the non-filled right part of the `template`\n// or it may fill the non-filled character placeholders\n// in the right part of the `template` with `spacer`\n// which is a space (' ') character by default.\n//\n// `template` is the template used to format the `value`.\n// It can be either a full-length template or a partial template.\n//\n// `formatter` can also be a string — a `template`\n// where character placeholders are denoted by 'x'es.\n// In this case `formatter` function is automatically created.\n//\n// Example:\n//\n// `value` is '880',\n// `caret` is `2` (before the first `0`)\n//\n// `formatter` is `'880' =>\n//   { text: '8 (80 )', template: 'x (xxx) xxx-xx-xx' }`\n//\n// The result is `{ text: '8 (80 )', caret: 4 }`.\n//\nfunction format(value, caret, formatter) {\n    if (typeof formatter === \"string\") {\n        formatter = (0,_templateFormatter_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(formatter);\n    }\n    var _ref = formatter(value) || {}, text = _ref.text, template = _ref.template;\n    if (text === undefined) {\n        text = value;\n    }\n    if (template) {\n        if (caret === undefined) {\n            caret = text.length;\n        } else {\n            var index = 0;\n            var found = false;\n            var possibly_last_input_character_index = -1;\n            while(index < text.length && index < template.length){\n                // Character placeholder found\n                if (text[index] !== template[index]) {\n                    if (caret === 0) {\n                        found = true;\n                        caret = index;\n                        break;\n                    }\n                    possibly_last_input_character_index = index;\n                    caret--;\n                }\n                index++;\n            } // If the caret was positioned after last input character,\n            // then the text caret index is just after the last input character.\n            if (!found) {\n                caret = possibly_last_input_character_index + 1;\n            }\n        }\n    }\n    return {\n        text: text,\n        caret: caret\n    };\n} //# sourceMappingURL=format.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaW5wdXQtZm9ybWF0L21vZHVsZXMvZm9ybWF0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdELENBQUMsa0VBQWtFO0FBQzNILEVBQUU7QUFDRix5RUFBeUU7QUFDekUsRUFBRTtBQUNGLHdFQUF3RTtBQUN4RSxvRkFBb0Y7QUFDcEYsRUFBRTtBQUNGLG1FQUFtRTtBQUNuRSxFQUFFO0FBQ0YsMERBQTBEO0FBQzFELG9FQUFvRTtBQUNwRSx1REFBdUQ7QUFDdkQsb0RBQW9EO0FBQ3BELCtDQUErQztBQUMvQyxFQUFFO0FBQ0YseURBQXlEO0FBQ3pELGlFQUFpRTtBQUNqRSxFQUFFO0FBQ0Ysa0RBQWtEO0FBQ2xELHFEQUFxRDtBQUNyRCw4REFBOEQ7QUFDOUQsRUFBRTtBQUNGLFdBQVc7QUFDWCxFQUFFO0FBQ0Ysb0JBQW9CO0FBQ3BCLHdDQUF3QztBQUN4QyxFQUFFO0FBQ0YsMkJBQTJCO0FBQzNCLHdEQUF3RDtBQUN4RCxFQUFFO0FBQ0YsaURBQWlEO0FBQ2pELEVBQUU7QUFFYSxTQUFTQyxPQUFPQyxLQUFLLEVBQUVDLEtBQUssRUFBRUMsU0FBUztJQUNwRCxJQUFJLE9BQU9BLGNBQWMsVUFBVTtRQUNqQ0EsWUFBWUosaUVBQWtCQSxDQUFDSTtJQUNqQztJQUVBLElBQUlDLE9BQU9ELFVBQVVGLFVBQVUsQ0FBQyxHQUM1QkksT0FBT0QsS0FBS0MsSUFBSSxFQUNoQkMsV0FBV0YsS0FBS0UsUUFBUTtJQUU1QixJQUFJRCxTQUFTRSxXQUFXO1FBQ3RCRixPQUFPSjtJQUNUO0lBRUEsSUFBSUssVUFBVTtRQUNaLElBQUlKLFVBQVVLLFdBQVc7WUFDdkJMLFFBQVFHLEtBQUtHLE1BQU07UUFDckIsT0FBTztZQUNMLElBQUlDLFFBQVE7WUFDWixJQUFJQyxRQUFRO1lBQ1osSUFBSUMsc0NBQXNDLENBQUM7WUFFM0MsTUFBT0YsUUFBUUosS0FBS0csTUFBTSxJQUFJQyxRQUFRSCxTQUFTRSxNQUFNLENBQUU7Z0JBQ3JELDhCQUE4QjtnQkFDOUIsSUFBSUgsSUFBSSxDQUFDSSxNQUFNLEtBQUtILFFBQVEsQ0FBQ0csTUFBTSxFQUFFO29CQUNuQyxJQUFJUCxVQUFVLEdBQUc7d0JBQ2ZRLFFBQVE7d0JBQ1JSLFFBQVFPO3dCQUNSO29CQUNGO29CQUVBRSxzQ0FBc0NGO29CQUN0Q1A7Z0JBQ0Y7Z0JBRUFPO1lBQ0YsRUFBRSwwREFBMEQ7WUFDNUQsb0VBQW9FO1lBR3BFLElBQUksQ0FBQ0MsT0FBTztnQkFDVlIsUUFBUVMsc0NBQXNDO1lBQ2hEO1FBQ0Y7SUFDRjtJQUVBLE9BQU87UUFDTE4sTUFBTUE7UUFDTkgsT0FBT0E7SUFDVDtBQUNGLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vemVzdC12My8uL25vZGVfbW9kdWxlcy9pbnB1dC1mb3JtYXQvbW9kdWxlcy9mb3JtYXQuanM/ZjVmZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdGVtcGxhdGVfZm9ybWF0dGVyIGZyb20gJy4vdGVtcGxhdGVGb3JtYXR0ZXIuanMnOyAvLyBGb3JtYXRzIGB2YWx1ZWAgdmFsdWUgcHJlc2VydmluZyBgY2FyZXRgIGF0IHRoZSBzYW1lIGNoYXJhY3Rlci5cbi8vXG4vLyBgeyB2YWx1ZSwgY2FyZXQgfWAgYXR0cmlidXRlIGlzIHRoZSByZXN1bHQgb2YgYHBhcnNlKClgIGZ1bmN0aW9uIGNhbGwuXG4vL1xuLy8gUmV0dXJucyBgeyB0ZXh0LCBjYXJldCB9YCB3aGVyZSB0aGUgbmV3IGBjYXJldGAgaXMgdGhlIGNhcmV0IHBvc2l0aW9uXG4vLyBpbnNpZGUgYHRleHRgIHRleHQgY29ycmVzcG9uZGluZyB0byB0aGUgb3JpZ2luYWwgYGNhcmV0YCBwb3NpdGlvbiBpbnNpZGUgYHZhbHVlYC5cbi8vXG4vLyBgZm9ybWF0dGVyKHZhbHVlKWAgaXMgYSBmdW5jdGlvbiByZXR1cm5pbmcgYHsgdGV4dCwgdGVtcGxhdGUgfWAuXG4vL1xuLy8gYHRleHRgIGlzIHRoZSBgdmFsdWVgIHZhbHVlIGZvcm1hdHRlZCB1c2luZyBgdGVtcGxhdGVgLlxuLy8gSXQgbWF5IGVpdGhlciBjdXQgb2ZmIHRoZSBub24tZmlsbGVkIHJpZ2h0IHBhcnQgb2YgdGhlIGB0ZW1wbGF0ZWBcbi8vIG9yIGl0IG1heSBmaWxsIHRoZSBub24tZmlsbGVkIGNoYXJhY3RlciBwbGFjZWhvbGRlcnNcbi8vIGluIHRoZSByaWdodCBwYXJ0IG9mIHRoZSBgdGVtcGxhdGVgIHdpdGggYHNwYWNlcmBcbi8vIHdoaWNoIGlzIGEgc3BhY2UgKCcgJykgY2hhcmFjdGVyIGJ5IGRlZmF1bHQuXG4vL1xuLy8gYHRlbXBsYXRlYCBpcyB0aGUgdGVtcGxhdGUgdXNlZCB0byBmb3JtYXQgdGhlIGB2YWx1ZWAuXG4vLyBJdCBjYW4gYmUgZWl0aGVyIGEgZnVsbC1sZW5ndGggdGVtcGxhdGUgb3IgYSBwYXJ0aWFsIHRlbXBsYXRlLlxuLy9cbi8vIGBmb3JtYXR0ZXJgIGNhbiBhbHNvIGJlIGEgc3RyaW5nIOKAlCBhIGB0ZW1wbGF0ZWBcbi8vIHdoZXJlIGNoYXJhY3RlciBwbGFjZWhvbGRlcnMgYXJlIGRlbm90ZWQgYnkgJ3gnZXMuXG4vLyBJbiB0aGlzIGNhc2UgYGZvcm1hdHRlcmAgZnVuY3Rpb24gaXMgYXV0b21hdGljYWxseSBjcmVhdGVkLlxuLy9cbi8vIEV4YW1wbGU6XG4vL1xuLy8gYHZhbHVlYCBpcyAnODgwJyxcbi8vIGBjYXJldGAgaXMgYDJgIChiZWZvcmUgdGhlIGZpcnN0IGAwYClcbi8vXG4vLyBgZm9ybWF0dGVyYCBpcyBgJzg4MCcgPT5cbi8vICAgeyB0ZXh0OiAnOCAoODAgKScsIHRlbXBsYXRlOiAneCAoeHh4KSB4eHgteHgteHgnIH1gXG4vL1xuLy8gVGhlIHJlc3VsdCBpcyBgeyB0ZXh0OiAnOCAoODAgKScsIGNhcmV0OiA0IH1gLlxuLy9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZm9ybWF0KHZhbHVlLCBjYXJldCwgZm9ybWF0dGVyKSB7XG4gIGlmICh0eXBlb2YgZm9ybWF0dGVyID09PSAnc3RyaW5nJykge1xuICAgIGZvcm1hdHRlciA9IHRlbXBsYXRlX2Zvcm1hdHRlcihmb3JtYXR0ZXIpO1xuICB9XG5cbiAgdmFyIF9yZWYgPSBmb3JtYXR0ZXIodmFsdWUpIHx8IHt9LFxuICAgICAgdGV4dCA9IF9yZWYudGV4dCxcbiAgICAgIHRlbXBsYXRlID0gX3JlZi50ZW1wbGF0ZTtcblxuICBpZiAodGV4dCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGV4dCA9IHZhbHVlO1xuICB9XG5cbiAgaWYgKHRlbXBsYXRlKSB7XG4gICAgaWYgKGNhcmV0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGNhcmV0ID0gdGV4dC5sZW5ndGg7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBpbmRleCA9IDA7XG4gICAgICB2YXIgZm91bmQgPSBmYWxzZTtcbiAgICAgIHZhciBwb3NzaWJseV9sYXN0X2lucHV0X2NoYXJhY3Rlcl9pbmRleCA9IC0xO1xuXG4gICAgICB3aGlsZSAoaW5kZXggPCB0ZXh0Lmxlbmd0aCAmJiBpbmRleCA8IHRlbXBsYXRlLmxlbmd0aCkge1xuICAgICAgICAvLyBDaGFyYWN0ZXIgcGxhY2Vob2xkZXIgZm91bmRcbiAgICAgICAgaWYgKHRleHRbaW5kZXhdICE9PSB0ZW1wbGF0ZVtpbmRleF0pIHtcbiAgICAgICAgICBpZiAoY2FyZXQgPT09IDApIHtcbiAgICAgICAgICAgIGZvdW5kID0gdHJ1ZTtcbiAgICAgICAgICAgIGNhcmV0ID0gaW5kZXg7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBwb3NzaWJseV9sYXN0X2lucHV0X2NoYXJhY3Rlcl9pbmRleCA9IGluZGV4O1xuICAgICAgICAgIGNhcmV0LS07XG4gICAgICAgIH1cblxuICAgICAgICBpbmRleCsrO1xuICAgICAgfSAvLyBJZiB0aGUgY2FyZXQgd2FzIHBvc2l0aW9uZWQgYWZ0ZXIgbGFzdCBpbnB1dCBjaGFyYWN0ZXIsXG4gICAgICAvLyB0aGVuIHRoZSB0ZXh0IGNhcmV0IGluZGV4IGlzIGp1c3QgYWZ0ZXIgdGhlIGxhc3QgaW5wdXQgY2hhcmFjdGVyLlxuXG5cbiAgICAgIGlmICghZm91bmQpIHtcbiAgICAgICAgY2FyZXQgPSBwb3NzaWJseV9sYXN0X2lucHV0X2NoYXJhY3Rlcl9pbmRleCArIDE7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB0ZXh0OiB0ZXh0LFxuICAgIGNhcmV0OiBjYXJldFxuICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Zm9ybWF0LmpzLm1hcCJdLCJuYW1lcyI6WyJ0ZW1wbGF0ZV9mb3JtYXR0ZXIiLCJmb3JtYXQiLCJ2YWx1ZSIsImNhcmV0IiwiZm9ybWF0dGVyIiwiX3JlZiIsInRleHQiLCJ0ZW1wbGF0ZSIsInVuZGVmaW5lZCIsImxlbmd0aCIsImluZGV4IiwiZm91bmQiLCJwb3NzaWJseV9sYXN0X2lucHV0X2NoYXJhY3Rlcl9pbmRleCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/input-format/modules/format.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/input-format/modules/helpers.js":
/*!******************************************************!*\
  !*** ./node_modules/input-format/modules/helpers.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   count_occurences: () => (/* binding */ count_occurences)\n/* harmony export */ });\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n        return function() {\n            if (i >= o.length) return {\n                done: true\n            };\n            return {\n                done: false,\n                value: o[i++]\n            };\n        };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++){\n        arr2[i] = arr[i];\n    }\n    return arr2;\n}\n// Counts all occurences of a symbol in a string\nfunction count_occurences(symbol, string) {\n    var count = 0; // Using `.split('')` here instead of normal `for ... of`\n    // because the importing application doesn't neccessarily include an ES6 polyfill.\n    // The `.split('')` approach discards \"exotic\" UTF-8 characters\n    // (the ones consisting of four bytes)\n    // but template placeholder characters don't fall into that range\n    // so skipping such miscellaneous \"exotic\" characters\n    // won't matter here for just counting placeholder character occurrences.\n    for(var _iterator = _createForOfIteratorHelperLoose(string.split(\"\")), _step; !(_step = _iterator()).done;){\n        var character = _step.value;\n        if (character === symbol) {\n            count++;\n        }\n    }\n    return count;\n} //# sourceMappingURL=helpers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaW5wdXQtZm9ybWF0L21vZHVsZXMvaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsU0FBU0EsZ0NBQWdDQyxDQUFDLEVBQUVDLGNBQWM7SUFBSSxJQUFJQyxLQUFLLE9BQU9DLFdBQVcsZUFBZUgsQ0FBQyxDQUFDRyxPQUFPQyxRQUFRLENBQUMsSUFBSUosQ0FBQyxDQUFDLGFBQWE7SUFBRSxJQUFJRSxJQUFJLE9BQU8sQ0FBQ0EsS0FBS0EsR0FBR0csSUFBSSxDQUFDTCxFQUFDLEVBQUdNLElBQUksQ0FBQ0MsSUFBSSxDQUFDTDtJQUFLLElBQUlNLE1BQU1DLE9BQU8sQ0FBQ1QsTUFBT0UsQ0FBQUEsS0FBS1EsNEJBQTRCVixFQUFDLEtBQU1DLGtCQUFrQkQsS0FBSyxPQUFPQSxFQUFFVyxNQUFNLEtBQUssVUFBVTtRQUFFLElBQUlULElBQUlGLElBQUlFO1FBQUksSUFBSVUsSUFBSTtRQUFHLE9BQU87WUFBYyxJQUFJQSxLQUFLWixFQUFFVyxNQUFNLEVBQUUsT0FBTztnQkFBRUUsTUFBTTtZQUFLO1lBQUcsT0FBTztnQkFBRUEsTUFBTTtnQkFBT0MsT0FBT2QsQ0FBQyxDQUFDWSxJQUFJO1lBQUM7UUFBRztJQUFHO0lBQUUsTUFBTSxJQUFJRyxVQUFVO0FBQTBJO0FBRTNsQixTQUFTTCw0QkFBNEJWLENBQUMsRUFBRWdCLE1BQU07SUFBSSxJQUFJLENBQUNoQixHQUFHO0lBQVEsSUFBSSxPQUFPQSxNQUFNLFVBQVUsT0FBT2lCLGtCQUFrQmpCLEdBQUdnQjtJQUFTLElBQUlFLElBQUlDLE9BQU9DLFNBQVMsQ0FBQ0MsUUFBUSxDQUFDaEIsSUFBSSxDQUFDTCxHQUFHc0IsS0FBSyxDQUFDLEdBQUcsQ0FBQztJQUFJLElBQUlKLE1BQU0sWUFBWWxCLEVBQUV1QixXQUFXLEVBQUVMLElBQUlsQixFQUFFdUIsV0FBVyxDQUFDQyxJQUFJO0lBQUUsSUFBSU4sTUFBTSxTQUFTQSxNQUFNLE9BQU8sT0FBT1YsTUFBTWlCLElBQUksQ0FBQ3pCO0lBQUksSUFBSWtCLE1BQU0sZUFBZSwyQ0FBMkNRLElBQUksQ0FBQ1IsSUFBSSxPQUFPRCxrQkFBa0JqQixHQUFHZ0I7QUFBUztBQUUvWixTQUFTQyxrQkFBa0JVLEdBQUcsRUFBRUMsR0FBRztJQUFJLElBQUlBLE9BQU8sUUFBUUEsTUFBTUQsSUFBSWhCLE1BQU0sRUFBRWlCLE1BQU1ELElBQUloQixNQUFNO0lBQUUsSUFBSyxJQUFJQyxJQUFJLEdBQUdpQixPQUFPLElBQUlyQixNQUFNb0IsTUFBTWhCLElBQUlnQixLQUFLaEIsSUFBSztRQUFFaUIsSUFBSSxDQUFDakIsRUFBRSxHQUFHZSxHQUFHLENBQUNmLEVBQUU7SUFBRTtJQUFFLE9BQU9pQjtBQUFNO0FBRXRMLGdEQUFnRDtBQUN6QyxTQUFTQyxpQkFBaUJDLE1BQU0sRUFBRUMsTUFBTTtJQUM3QyxJQUFJQyxRQUFRLEdBQUcseURBQXlEO0lBQ3hFLGtGQUFrRjtJQUNsRiwrREFBK0Q7SUFDL0Qsc0NBQXNDO0lBQ3RDLGlFQUFpRTtJQUNqRSxxREFBcUQ7SUFDckQseUVBQXlFO0lBRXpFLElBQUssSUFBSUMsWUFBWW5DLGdDQUFnQ2lDLE9BQU9HLEtBQUssQ0FBQyxNQUFNQyxPQUFPLENBQUMsQ0FBQ0EsUUFBUUYsV0FBVSxFQUFHckIsSUFBSSxFQUFHO1FBQzNHLElBQUl3QixZQUFZRCxNQUFNdEIsS0FBSztRQUUzQixJQUFJdUIsY0FBY04sUUFBUTtZQUN4QkU7UUFDRjtJQUNGO0lBRUEsT0FBT0E7QUFDVCxFQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL3plc3QtdjMvLi9ub2RlX21vZHVsZXMvaW5wdXQtZm9ybWF0L21vZHVsZXMvaGVscGVycy5qcz9jZmI0Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyTG9vc2UobywgYWxsb3dBcnJheUxpa2UpIHsgdmFyIGl0ID0gdHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBvW1N5bWJvbC5pdGVyYXRvcl0gfHwgb1tcIkBAaXRlcmF0b3JcIl07IGlmIChpdCkgcmV0dXJuIChpdCA9IGl0LmNhbGwobykpLm5leHQuYmluZChpdCk7IGlmIChBcnJheS5pc0FycmF5KG8pIHx8IChpdCA9IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvKSkgfHwgYWxsb3dBcnJheUxpa2UgJiYgbyAmJiB0eXBlb2Ygby5sZW5ndGggPT09IFwibnVtYmVyXCIpIHsgaWYgKGl0KSBvID0gaXQ7IHZhciBpID0gMDsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgaWYgKGkgPj0gby5sZW5ndGgpIHJldHVybiB7IGRvbmU6IHRydWUgfTsgcmV0dXJuIHsgZG9uZTogZmFsc2UsIHZhbHVlOiBvW2krK10gfTsgfTsgfSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGl0ZXJhdGUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cblxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikgeyBpZiAoIW8pIHJldHVybjsgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9XG5cbmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfVxuXG4vLyBDb3VudHMgYWxsIG9jY3VyZW5jZXMgb2YgYSBzeW1ib2wgaW4gYSBzdHJpbmdcbmV4cG9ydCBmdW5jdGlvbiBjb3VudF9vY2N1cmVuY2VzKHN5bWJvbCwgc3RyaW5nKSB7XG4gIHZhciBjb3VudCA9IDA7IC8vIFVzaW5nIGAuc3BsaXQoJycpYCBoZXJlIGluc3RlYWQgb2Ygbm9ybWFsIGBmb3IgLi4uIG9mYFxuICAvLyBiZWNhdXNlIHRoZSBpbXBvcnRpbmcgYXBwbGljYXRpb24gZG9lc24ndCBuZWNjZXNzYXJpbHkgaW5jbHVkZSBhbiBFUzYgcG9seWZpbGwuXG4gIC8vIFRoZSBgLnNwbGl0KCcnKWAgYXBwcm9hY2ggZGlzY2FyZHMgXCJleG90aWNcIiBVVEYtOCBjaGFyYWN0ZXJzXG4gIC8vICh0aGUgb25lcyBjb25zaXN0aW5nIG9mIGZvdXIgYnl0ZXMpXG4gIC8vIGJ1dCB0ZW1wbGF0ZSBwbGFjZWhvbGRlciBjaGFyYWN0ZXJzIGRvbid0IGZhbGwgaW50byB0aGF0IHJhbmdlXG4gIC8vIHNvIHNraXBwaW5nIHN1Y2ggbWlzY2VsbGFuZW91cyBcImV4b3RpY1wiIGNoYXJhY3RlcnNcbiAgLy8gd29uJ3QgbWF0dGVyIGhlcmUgZm9yIGp1c3QgY291bnRpbmcgcGxhY2Vob2xkZXIgY2hhcmFjdGVyIG9jY3VycmVuY2VzLlxuXG4gIGZvciAodmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyTG9vc2Uoc3RyaW5nLnNwbGl0KCcnKSksIF9zdGVwOyAhKF9zdGVwID0gX2l0ZXJhdG9yKCkpLmRvbmU7KSB7XG4gICAgdmFyIGNoYXJhY3RlciA9IF9zdGVwLnZhbHVlO1xuXG4gICAgaWYgKGNoYXJhY3RlciA9PT0gc3ltYm9sKSB7XG4gICAgICBjb3VudCsrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBjb3VudDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlbHBlcnMuanMubWFwIl0sIm5hbWVzIjpbIl9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyTG9vc2UiLCJvIiwiYWxsb3dBcnJheUxpa2UiLCJpdCIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiY2FsbCIsIm5leHQiLCJiaW5kIiwiQXJyYXkiLCJpc0FycmF5IiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwibGVuZ3RoIiwiaSIsImRvbmUiLCJ2YWx1ZSIsIlR5cGVFcnJvciIsIm1pbkxlbiIsIl9hcnJheUxpa2VUb0FycmF5IiwibiIsIk9iamVjdCIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwic2xpY2UiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJmcm9tIiwidGVzdCIsImFyciIsImxlbiIsImFycjIiLCJjb3VudF9vY2N1cmVuY2VzIiwic3ltYm9sIiwic3RyaW5nIiwiY291bnQiLCJfaXRlcmF0b3IiLCJzcGxpdCIsIl9zdGVwIiwiY2hhcmFjdGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/input-format/modules/helpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/input-format/modules/inputControl.js":
/*!***********************************************************!*\
  !*** ./node_modules/input-format/modules/inputControl.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onChange: () => (/* binding */ onChange),\n/* harmony export */   onCut: () => (/* binding */ onCut),\n/* harmony export */   onKeyDown: () => (/* binding */ onKeyDown),\n/* harmony export */   onPaste: () => (/* binding */ onPaste)\n/* harmony export */ });\n/* harmony import */ var _edit_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./edit.js */ \"(ssr)/./node_modules/input-format/modules/edit.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parse.js */ \"(ssr)/./node_modules/input-format/modules/parse.js\");\n/* harmony import */ var _format_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./format.js */ \"(ssr)/./node_modules/input-format/modules/format.js\");\n/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom.js */ \"(ssr)/./node_modules/input-format/modules/dom.js\");\n\n\n\n // Deprecated.\n// I don't know why this function exists.\nfunction onCut(event, input, _parse, _format, on_change) {\n    if ((0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.isReadOnly)(input)) {\n        return;\n    } // The actual cut hasn't happened just yet hence the timeout.\n    setTimeout(function() {\n        return formatInputText(input, _parse, _format, undefined, on_change);\n    }, 0);\n} // Deprecated.\n// I don't know why this function exists.\nfunction onPaste(event, input, _parse, _format, on_change) {\n    if ((0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.isReadOnly)(input)) {\n        return;\n    }\n    var selection = (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.getSelection)(input); // If selection is made,\n    // just erase the selected text\n    // prior to pasting\n    if (selection) {\n        eraseSelection(input, selection);\n    }\n    formatInputText(input, _parse, _format, undefined, on_change);\n}\nfunction onChange(event, input, _parse, _format, on_change) {\n    formatInputText(input, _parse, _format, undefined, on_change);\n} // \"Delete\" and \"Backspace\" keys are special\n// in a way that they're not handled by the regular `onChange()` handler\n// and instead are intercepted and re-applied manually.\n// The reason is that normally hitting \"Backspace\" or \"Delete\"\n// results in erasing a character, but that character might be any character,\n// while it would be a better \"user experience\" if it erased not just any character\n// but the closest \"meaningful\" character.\n// For example, if a template is `(xxx) xxx-xxxx`,\n// and the `<input/>` value is `(111) 222-3333`,\n// then, if a user begins erasing the `3333` part via \"Backspace\"\n// and reaches the \"-\" character, then it would just erase the \"-\" character.\n// Nothing wrong with that, but it would be a better \"user experience\"\n// if hitting \"Backspace\" at that position would erase the closest \"meaningful\"\n// character, which would be the rightmost `2`.\n// So, what this `onKeyDown()` handler does is it intercepts\n// \"Backspace\" and \"Delete\" keys and re-applies those operations manually\n// following the logic described above.\nfunction onKeyDown(event, input, _parse, _format, on_change) {\n    if ((0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.isReadOnly)(input)) {\n        return;\n    }\n    var operation = (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.getOperation)(event);\n    switch(operation){\n        case \"Delete\":\n        case \"Backspace\":\n            // Intercept this operation and perform it manually.\n            event.preventDefault();\n            var selection = (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.getSelection)(input); // If a selection is made, just erase the selected text.\n            if (selection) {\n                eraseSelection(input, selection);\n                return formatInputText(input, _parse, _format, undefined, on_change);\n            } // Else, perform the (character erasing) operation manually.\n            return formatInputText(input, _parse, _format, operation, on_change);\n        default:\n    }\n}\n/**\r\n * Erases the selected text inside an `<input/>`.\r\n * @param  {DOMElement} input\r\n * @param  {Selection} selection\r\n */ function eraseSelection(input, selection) {\n    var text = input.value;\n    text = text.slice(0, selection.start) + text.slice(selection.end);\n    input.value = text;\n    (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.setCaretPosition)(input, selection.start);\n}\n/**\r\n * Parses and re-formats `<input/>` textual value.\r\n * E.g. when a user enters something into the `<input/>`\r\n * that raw input must first be parsed and the re-formatted properly.\r\n * Is called either after some user input (e.g. entered a character, pasted something)\r\n * or after the user performed an `operation` (e.g. \"Backspace\", \"Delete\").\r\n * @param  {DOMElement} input\r\n * @param  {Function} parse\r\n * @param  {Function} format\r\n * @param  {string} [operation] - The operation that triggered `<input/>` textual value change. E.g. \"Backspace\", \"Delete\".\r\n * @param  {Function} onChange\r\n */ function formatInputText(input, _parse, _format, operation, on_change) {\n    // Parse `<input/>` textual value.\n    // Get the `value` and `caret` position.\n    var _parse2 = (0,_parse_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(input.value, (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.getCaretPosition)(input), _parse), value = _parse2.value, caret = _parse2.caret; // If a user performed an operation (\"Backspace\", \"Delete\")\n    // then apply that operation and get the new `value` and `caret` position.\n    if (operation) {\n        var newValueAndCaret = (0,_edit_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(value, caret, operation);\n        value = newValueAndCaret.value;\n        caret = newValueAndCaret.caret;\n    } // Format the `value`.\n    // (and reposition the caret accordingly)\n    var formatted = (0,_format_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(value, caret, _format);\n    var text = formatted.text;\n    caret = formatted.caret; // Set `<input/>` textual value manually\n    // to prevent React from resetting the caret position\n    // later inside a subsequent `render()`.\n    // Doesn't work for custom `inputComponent`s for some reason.\n    input.value = text; // Position the caret properly.\n    (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.setCaretPosition)(input, caret); // If the `<input/>` textual value did change,\n    // then the parsed `value` may have changed too.\n    if (on_change) {\n        on_change(value);\n    }\n} //# sourceMappingURL=inputControl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/input-format/modules/inputControl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/input-format/modules/parse.js":
/*!****************************************************!*\
  !*** ./node_modules/input-format/modules/parse.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ parse)\n/* harmony export */ });\n// Parses the `text`.\n//\n// Returns `{ value, caret }` where `caret` is\n// the caret position inside `value`\n// corresponding to the `caret_position` inside `text`.\n//\n// The `text` is parsed by feeding each character sequentially to\n// `parse_character(character, value, context)` function\n// and appending the result (if it's not `undefined`) to `value`.\n//\n// `context` argument is just a utility empty object that is shared within the bounds\n// of parsing a single input string. The `_parse()` function could use that object\n// to store any kind of \"flags\" in it in order to alter its behavior based when\n// parsing next characters within the same string. Or it could completely ignore it.\n//\n// Example:\n//\n// `text` is `8 (800) 555-35-35`,\n// `caret_position` is `4` (before the first `0`).\n// `parse_character` is `(character, value) =>\n//   if (character >= '0' && character <= '9') { return character }`.\n//\n// then `parse()` outputs `{ value: '88005553535', caret: 2 }`.\n//\nfunction parse(text, caret_position, parse_character) {\n    var context = {};\n    var value = \"\";\n    var focused_input_character_index = 0;\n    var index = 0;\n    while(index < text.length){\n        var character = parse_character(text[index], value, context);\n        if (character !== undefined) {\n            value += character;\n            if (caret_position !== undefined) {\n                if (caret_position === index) {\n                    focused_input_character_index = value.length - 1;\n                } else if (caret_position > index) {\n                    focused_input_character_index = value.length;\n                }\n            }\n        }\n        index++;\n    } // If caret position wasn't specified\n    if (caret_position === undefined) {\n        // Then set caret position to \"after the last input character\"\n        focused_input_character_index = value.length;\n    }\n    var result = {\n        value: value,\n        caret: focused_input_character_index\n    };\n    return result;\n} //# sourceMappingURL=parse.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaW5wdXQtZm9ybWF0L21vZHVsZXMvcGFyc2UuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHFCQUFxQjtBQUNyQixFQUFFO0FBQ0YsOENBQThDO0FBQzlDLG9DQUFvQztBQUNwQyx1REFBdUQ7QUFDdkQsRUFBRTtBQUNGLGlFQUFpRTtBQUNqRSx3REFBd0Q7QUFDeEQsaUVBQWlFO0FBQ2pFLEVBQUU7QUFDRixxRkFBcUY7QUFDckYsa0ZBQWtGO0FBQ2xGLCtFQUErRTtBQUMvRSxvRkFBb0Y7QUFDcEYsRUFBRTtBQUNGLFdBQVc7QUFDWCxFQUFFO0FBQ0YsaUNBQWlDO0FBQ2pDLGtEQUFrRDtBQUNsRCw4Q0FBOEM7QUFDOUMscUVBQXFFO0FBQ3JFLEVBQUU7QUFDRiwrREFBK0Q7QUFDL0QsRUFBRTtBQUNhLFNBQVNBLE1BQU1DLElBQUksRUFBRUMsY0FBYyxFQUFFQyxlQUFlO0lBQ2pFLElBQUlDLFVBQVUsQ0FBQztJQUNmLElBQUlDLFFBQVE7SUFDWixJQUFJQyxnQ0FBZ0M7SUFDcEMsSUFBSUMsUUFBUTtJQUVaLE1BQU9BLFFBQVFOLEtBQUtPLE1BQU0sQ0FBRTtRQUMxQixJQUFJQyxZQUFZTixnQkFBZ0JGLElBQUksQ0FBQ00sTUFBTSxFQUFFRixPQUFPRDtRQUVwRCxJQUFJSyxjQUFjQyxXQUFXO1lBQzNCTCxTQUFTSTtZQUVULElBQUlQLG1CQUFtQlEsV0FBVztnQkFDaEMsSUFBSVIsbUJBQW1CSyxPQUFPO29CQUM1QkQsZ0NBQWdDRCxNQUFNRyxNQUFNLEdBQUc7Z0JBQ2pELE9BQU8sSUFBSU4saUJBQWlCSyxPQUFPO29CQUNqQ0QsZ0NBQWdDRCxNQUFNRyxNQUFNO2dCQUM5QztZQUNGO1FBQ0Y7UUFFQUQ7SUFDRixFQUFFLHFDQUFxQztJQUd2QyxJQUFJTCxtQkFBbUJRLFdBQVc7UUFDaEMsOERBQThEO1FBQzlESixnQ0FBZ0NELE1BQU1HLE1BQU07SUFDOUM7SUFFQSxJQUFJRyxTQUFTO1FBQ1hOLE9BQU9BO1FBQ1BPLE9BQU9OO0lBQ1Q7SUFDQSxPQUFPSztBQUNULEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vemVzdC12My8uL25vZGVfbW9kdWxlcy9pbnB1dC1mb3JtYXQvbW9kdWxlcy9wYXJzZS5qcz9lMDJmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFBhcnNlcyB0aGUgYHRleHRgLlxuLy9cbi8vIFJldHVybnMgYHsgdmFsdWUsIGNhcmV0IH1gIHdoZXJlIGBjYXJldGAgaXNcbi8vIHRoZSBjYXJldCBwb3NpdGlvbiBpbnNpZGUgYHZhbHVlYFxuLy8gY29ycmVzcG9uZGluZyB0byB0aGUgYGNhcmV0X3Bvc2l0aW9uYCBpbnNpZGUgYHRleHRgLlxuLy9cbi8vIFRoZSBgdGV4dGAgaXMgcGFyc2VkIGJ5IGZlZWRpbmcgZWFjaCBjaGFyYWN0ZXIgc2VxdWVudGlhbGx5IHRvXG4vLyBgcGFyc2VfY2hhcmFjdGVyKGNoYXJhY3RlciwgdmFsdWUsIGNvbnRleHQpYCBmdW5jdGlvblxuLy8gYW5kIGFwcGVuZGluZyB0aGUgcmVzdWx0IChpZiBpdCdzIG5vdCBgdW5kZWZpbmVkYCkgdG8gYHZhbHVlYC5cbi8vXG4vLyBgY29udGV4dGAgYXJndW1lbnQgaXMganVzdCBhIHV0aWxpdHkgZW1wdHkgb2JqZWN0IHRoYXQgaXMgc2hhcmVkIHdpdGhpbiB0aGUgYm91bmRzXG4vLyBvZiBwYXJzaW5nIGEgc2luZ2xlIGlucHV0IHN0cmluZy4gVGhlIGBfcGFyc2UoKWAgZnVuY3Rpb24gY291bGQgdXNlIHRoYXQgb2JqZWN0XG4vLyB0byBzdG9yZSBhbnkga2luZCBvZiBcImZsYWdzXCIgaW4gaXQgaW4gb3JkZXIgdG8gYWx0ZXIgaXRzIGJlaGF2aW9yIGJhc2VkIHdoZW5cbi8vIHBhcnNpbmcgbmV4dCBjaGFyYWN0ZXJzIHdpdGhpbiB0aGUgc2FtZSBzdHJpbmcuIE9yIGl0IGNvdWxkIGNvbXBsZXRlbHkgaWdub3JlIGl0LlxuLy9cbi8vIEV4YW1wbGU6XG4vL1xuLy8gYHRleHRgIGlzIGA4ICg4MDApIDU1NS0zNS0zNWAsXG4vLyBgY2FyZXRfcG9zaXRpb25gIGlzIGA0YCAoYmVmb3JlIHRoZSBmaXJzdCBgMGApLlxuLy8gYHBhcnNlX2NoYXJhY3RlcmAgaXMgYChjaGFyYWN0ZXIsIHZhbHVlKSA9PlxuLy8gICBpZiAoY2hhcmFjdGVyID49ICcwJyAmJiBjaGFyYWN0ZXIgPD0gJzknKSB7IHJldHVybiBjaGFyYWN0ZXIgfWAuXG4vL1xuLy8gdGhlbiBgcGFyc2UoKWAgb3V0cHV0cyBgeyB2YWx1ZTogJzg4MDA1NTUzNTM1JywgY2FyZXQ6IDIgfWAuXG4vL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGFyc2UodGV4dCwgY2FyZXRfcG9zaXRpb24sIHBhcnNlX2NoYXJhY3Rlcikge1xuICB2YXIgY29udGV4dCA9IHt9O1xuICB2YXIgdmFsdWUgPSAnJztcbiAgdmFyIGZvY3VzZWRfaW5wdXRfY2hhcmFjdGVyX2luZGV4ID0gMDtcbiAgdmFyIGluZGV4ID0gMDtcblxuICB3aGlsZSAoaW5kZXggPCB0ZXh0Lmxlbmd0aCkge1xuICAgIHZhciBjaGFyYWN0ZXIgPSBwYXJzZV9jaGFyYWN0ZXIodGV4dFtpbmRleF0sIHZhbHVlLCBjb250ZXh0KTtcblxuICAgIGlmIChjaGFyYWN0ZXIgIT09IHVuZGVmaW5lZCkge1xuICAgICAgdmFsdWUgKz0gY2hhcmFjdGVyO1xuXG4gICAgICBpZiAoY2FyZXRfcG9zaXRpb24gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBpZiAoY2FyZXRfcG9zaXRpb24gPT09IGluZGV4KSB7XG4gICAgICAgICAgZm9jdXNlZF9pbnB1dF9jaGFyYWN0ZXJfaW5kZXggPSB2YWx1ZS5sZW5ndGggLSAxO1xuICAgICAgICB9IGVsc2UgaWYgKGNhcmV0X3Bvc2l0aW9uID4gaW5kZXgpIHtcbiAgICAgICAgICBmb2N1c2VkX2lucHV0X2NoYXJhY3Rlcl9pbmRleCA9IHZhbHVlLmxlbmd0aDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGluZGV4Kys7XG4gIH0gLy8gSWYgY2FyZXQgcG9zaXRpb24gd2Fzbid0IHNwZWNpZmllZFxuXG5cbiAgaWYgKGNhcmV0X3Bvc2l0aW9uID09PSB1bmRlZmluZWQpIHtcbiAgICAvLyBUaGVuIHNldCBjYXJldCBwb3NpdGlvbiB0byBcImFmdGVyIHRoZSBsYXN0IGlucHV0IGNoYXJhY3RlclwiXG4gICAgZm9jdXNlZF9pbnB1dF9jaGFyYWN0ZXJfaW5kZXggPSB2YWx1ZS5sZW5ndGg7XG4gIH1cblxuICB2YXIgcmVzdWx0ID0ge1xuICAgIHZhbHVlOiB2YWx1ZSxcbiAgICBjYXJldDogZm9jdXNlZF9pbnB1dF9jaGFyYWN0ZXJfaW5kZXhcbiAgfTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhcnNlLmpzLm1hcCJdLCJuYW1lcyI6WyJwYXJzZSIsInRleHQiLCJjYXJldF9wb3NpdGlvbiIsInBhcnNlX2NoYXJhY3RlciIsImNvbnRleHQiLCJ2YWx1ZSIsImZvY3VzZWRfaW5wdXRfY2hhcmFjdGVyX2luZGV4IiwiaW5kZXgiLCJsZW5ndGgiLCJjaGFyYWN0ZXIiLCJ1bmRlZmluZWQiLCJyZXN1bHQiLCJjYXJldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/input-format/modules/parse.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/input-format/modules/react/Input.js":
/*!**********************************************************!*\
  !*** ./node_modules/input-format/modules/react/Input.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/prop-types/index.js\");\n/* harmony import */ var _useInput_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useInput.js */ \"(ssr)/./node_modules/input-format/modules/react/useInput.js\");\nvar _excluded = [\n    \"inputComponent\",\n    \"parse\",\n    \"format\",\n    \"value\",\n    \"defaultValue\",\n    \"onChange\",\n    \"controlled\",\n    \"onKeyDown\",\n    \"type\"\n];\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\n// This is just `./ReactInput.js` rewritten in Hooks.\n\n\n // Usage:\n//\n// <ReactInput\n// \tvalue={this.state.phone}\n// \tonChange={phone => this.setState({ phone })}\n// \tparse={character => character}\n// \tformat={value => ({ text: value, template: 'xxxxxxxx' })}/>\n//\nfunction Input(_ref, ref) {\n    var _ref$inputComponent = _ref.inputComponent, InputComponent = _ref$inputComponent === void 0 ? \"input\" : _ref$inputComponent, parse = _ref.parse, format = _ref.format, value = _ref.value, defaultValue = _ref.defaultValue, onChange = _ref.onChange, controlled = _ref.controlled, onKeyDown = _ref.onKeyDown, _ref$type = _ref.type, type = _ref$type === void 0 ? \"text\" : _ref$type, rest = _objectWithoutProperties(_ref, _excluded);\n    var inputProps = (0,_useInput_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_objectSpread({\n        ref: ref,\n        parse: parse,\n        format: format,\n        value: value,\n        defaultValue: defaultValue,\n        onChange: onChange,\n        controlled: controlled,\n        onKeyDown: onKeyDown,\n        type: type\n    }, rest));\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(InputComponent, inputProps);\n}\nInput = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(Input);\nInput.propTypes = {\n    // Parses a single characher of `<input/>` text.\n    parse: prop_types__WEBPACK_IMPORTED_MODULE_2__.func.isRequired,\n    // Formats `value` into `<input/>` text.\n    format: prop_types__WEBPACK_IMPORTED_MODULE_2__.func.isRequired,\n    // Renders `<input/>` by default.\n    inputComponent: prop_types__WEBPACK_IMPORTED_MODULE_2__.elementType,\n    // `<input/>` `type` attribute.\n    type: prop_types__WEBPACK_IMPORTED_MODULE_2__.string,\n    // Is parsed from <input/> text.\n    value: prop_types__WEBPACK_IMPORTED_MODULE_2__.string,\n    // An initial value for an \"uncontrolled\" <input/>.\n    defaultValue: prop_types__WEBPACK_IMPORTED_MODULE_2__.string,\n    // This handler is called each time `<input/>` text is changed.\n    onChange: prop_types__WEBPACK_IMPORTED_MODULE_2__.func,\n    // Whether this input should be \"controlled\" or \"uncontrolled\".\n    // The default value is `true` meaning \"uncontrolled\".\n    controlled: prop_types__WEBPACK_IMPORTED_MODULE_2__.bool,\n    // Passthrough\n    onKeyDown: prop_types__WEBPACK_IMPORTED_MODULE_2__.func,\n    onCut: prop_types__WEBPACK_IMPORTED_MODULE_2__.func,\n    onPaste: prop_types__WEBPACK_IMPORTED_MODULE_2__.func\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Input); //# sourceMappingURL=Input.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/input-format/modules/react/Input.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/input-format/modules/react/useInput.js":
/*!*************************************************************!*\
  !*** ./node_modules/input-format/modules/react/useInput.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ useInput)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _inputControl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../inputControl.js */ \"(ssr)/./node_modules/input-format/modules/inputControl.js\");\nvar _excluded = [\n    \"ref\",\n    \"parse\",\n    \"format\",\n    \"value\",\n    \"defaultValue\",\n    \"controlled\",\n    \"onChange\",\n    \"onKeyDown\"\n];\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\n\n\nfunction useInput(_ref) {\n    var ref = _ref.ref, parse = _ref.parse, format = _ref.format, value = _ref.value, defaultValue = _ref.defaultValue, _ref$controlled = _ref.controlled, controlled = _ref$controlled === void 0 ? true : _ref$controlled, onChange = _ref.onChange, onKeyDown = _ref.onKeyDown, rest = _objectWithoutProperties(_ref, _excluded);\n    // It doesn't seem to be required to alert a developer about controlled/uncontrolled misuse:\n    // if `controlled` is `true` then `defaultValue` is simply ignored.\n    //\n    // if (defaultValue && controlled) {\n    // \tconsole.error('[input-format] You\\'ve passed both `defaultValue` and `controlled: true` properties which is an invalid use case')\n    // }\n    var internalRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    var setRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function(instance) {\n        internalRef.current = instance;\n        if (ref) {\n            if (typeof ref === \"function\") {\n                ref(instance);\n            } else {\n                ref.current = instance;\n            }\n        }\n    }, [\n        ref\n    ]);\n    var _onChange = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function(event) {\n        return (0,_inputControl_js__WEBPACK_IMPORTED_MODULE_1__.onChange)(event, internalRef.current, parse, format, onChange);\n    }, [\n        internalRef,\n        parse,\n        format,\n        onChange\n    ]);\n    var _onKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function(event) {\n        if (onKeyDown) {\n            onKeyDown(event);\n        } // If `onKeyDown()` handler above has called `event.preventDefault()`\n        // then ignore this `keydown` event.\n        if (event.defaultPrevented) {\n            return;\n        }\n        return (0,_inputControl_js__WEBPACK_IMPORTED_MODULE_1__.onKeyDown)(event, internalRef.current, parse, format, onChange);\n    }, [\n        internalRef,\n        parse,\n        format,\n        onChange,\n        onKeyDown\n    ]);\n    var commonProps = _objectSpread(_objectSpread({}, rest), {}, {\n        ref: setRef,\n        onChange: _onChange,\n        onKeyDown: _onKeyDown\n    });\n    if (controlled) {\n        return _objectSpread(_objectSpread({}, commonProps), {}, {\n            value: format(isEmptyValue(value) ? \"\" : value).text\n        });\n    }\n    return _objectSpread(_objectSpread({}, commonProps), {}, {\n        defaultValue: format(isEmptyValue(defaultValue) ? \"\" : defaultValue).text\n    });\n}\nfunction isEmptyValue(value) {\n    return value === undefined || value === null;\n} //# sourceMappingURL=useInput.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/input-format/modules/react/useInput.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/input-format/modules/templateFormatter.js":
/*!****************************************************************!*\
  !*** ./node_modules/input-format/modules/templateFormatter.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/./node_modules/input-format/modules/helpers.js\");\n/* harmony import */ var _closeBraces_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./closeBraces.js */ \"(ssr)/./node_modules/input-format/modules/closeBraces.js\");\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n        return function() {\n            if (i >= o.length) return {\n                done: true\n            };\n            return {\n                done: false,\n                value: o[i++]\n            };\n        };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++){\n        arr2[i] = arr[i];\n    }\n    return arr2;\n}\n\n // Takes a `template` where character placeholders\n// are denoted by 'x'es (e.g. 'x (xxx) xxx-xx-xx').\n//\n// Returns a function which takes `value` characters\n// and returns the `template` filled with those characters.\n// If the `template` can only be partially filled\n// then it is cut off.\n//\n// If `shouldCloseBraces` is `true`,\n// then it will also make sure all dangling braces are closed,\n// e.g. \"8 (8\" -> \"8 (8  )\" (iPhone style phone number input).\n//\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(template) {\n    var placeholder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"x\";\n    var shouldCloseBraces = arguments.length > 2 ? arguments[2] : undefined;\n    if (!template) {\n        return function(value) {\n            return {\n                text: value\n            };\n        };\n    }\n    var placeholdersCountInTemplate = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.count_occurences)(placeholder, template);\n    return function(value) {\n        if (!value) {\n            return {\n                text: \"\",\n                template: template\n            };\n        }\n        var characterIndexInValue = 0;\n        var templateWithFilledInPlaceholders = \"\"; // Using `.split('')` here instead of normal `for ... of`\n        // because the importing application doesn't neccessarily include an ES6 polyfill.\n        // The `.split('')` approach discards \"exotic\" UTF-8 characters\n        // (the ones consisting of four bytes)\n        // but template placeholder characters don't fall into that range\n        // and appending UTF-8 characters to a string in parts still works.\n        for(var _iterator = _createForOfIteratorHelperLoose(template.split(\"\")), _step; !(_step = _iterator()).done;){\n            var character = _step.value;\n            if (character !== placeholder) {\n                templateWithFilledInPlaceholders += character;\n                continue;\n            }\n            templateWithFilledInPlaceholders += value[characterIndexInValue];\n            characterIndexInValue++; // If the last available value character has been filled in,\n            // then return the filled in template\n            // (either trim the right part or retain it,\n            //  if no more character placeholders in there)\n            if (characterIndexInValue === value.length) {\n                // If there are more character placeholders\n                // in the right part of the template\n                // then simply trim it.\n                if (value.length < placeholdersCountInTemplate) {\n                    break;\n                }\n            }\n        }\n        if (shouldCloseBraces) {\n            templateWithFilledInPlaceholders = (0,_closeBraces_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(templateWithFilledInPlaceholders, template);\n        }\n        return {\n            text: templateWithFilledInPlaceholders,\n            template: template\n        };\n    };\n} //# sourceMappingURL=templateFormatter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/input-format/modules/templateFormatter.js\n");

/***/ })

};
;